name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.18, 1.19, '1.20', 1.21]
    
    steps:
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code
      uses: actions/checkout@v4

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Run tests with verbose output
      run: go test -v ./...

    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.20'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Check out code
      uses: actions/checkout@v4

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.54.2
        args: --timeout=5m

  build-examples:
    name: Build Examples
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Check out code
      uses: actions/checkout@v4

    - name: Build examples
      run: |
        if [ -d "examples" ]; then
          cd examples
          for dir in */; do
            if [ -f "$dir/main.go" ]; then
              echo "Building example: $dir"
              cd "$dir"
              go build -v .
              cd ..
            fi
          done
        fi